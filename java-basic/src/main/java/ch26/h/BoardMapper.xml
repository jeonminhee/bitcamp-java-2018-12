<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">

	<resultMap type="board" id="boardMap">
		<id column="board_id" property="no" />
		<result column="created_date" property="createddate" />
		<result column="view_count" property="viewcount" />
	</resultMap>

<!-- 여러 SQL문에서 반복적으로 사용하는 코드를 별도의 블록으로 분리시키기.
     <sql> SQL 코드 조각</sql>문법을 사용한다. -->
     <sql id="sql01">
       select *
       from x_board
     </sql>

	<select id="select1" resultMap="boardMap" parameterType="int">
  <include refid="sql01"/>
		<if test="value != null"><!-- test 속성 안에선 okok 안된다. value라고 해야한다. -->
		where
		  board_id = #{okok} <!-- 값을 꺼낼 때는 프로퍼티 이름으로 아무거나 가능하다. -->
		  </if>
	</select>
	
	<!-- 파라미터 타입이 자바 원시 타입, String, 래퍼 클래스가 아닌
	     일반 클래스인 경우, 원래 했던 것 처럼 프로퍼티 이름을 사용하면 된다. -->
	 <select id="select2" resultMap="boardMap" parameterType="map">
    <include refid="sql01"/>
    <if test="no != null">
    where
      board_id = #{no}
      </if>
  </select>
  
  <!-- <where> 태그를 사용하면 굳이 임의의 조건을 where 절에 추가할 필요가 없다.
  => 즉 위의 select3보다 편하게 처리할 수 있다.
   -->
   <select id="select3" resultMap="boardMap" parameterType="map">
    <include refid="sql01"/>
    <where>
    <if test="no != null">
      or board_id = #{no}
      </if>
    <if test="title != null">
      or title like concat('%', #{title}, '%')
      </if>
    <if test="contents != null">
      or contents like concat('%', #{contents}, '%')
      </if>
      </where>
  </select>
  
</mapper>